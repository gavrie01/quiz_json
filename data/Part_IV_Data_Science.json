[
    {
       "question": "It is an example of synthetic data: artificially generated text or image that mimics patterns of real-world data",
       "options": ["Yes", "No"],
       "correct_answer": "Yes"
     },
     {
        "question": "Why is synthetic data valuable for ML engineers?",
        "options": ["the generation of synthetic data is not important, it is just an experiment so far with no purpose", "the generation of synthetic data is particularly valuable in situations where the use of real data may pose privacy concerns, data protection issues, or limitations on data sharing with researchers"],
        "correct_answer": "the generation of synthetic data is particularly valuable in situations where the use of real data may pose privacy concerns, data protection issues, or limitations on data sharing with researchers"
      },
      {
        "question": "Key components of a Generative Adversarial Network (GAN) architecture ...",
        "options": ["Generator and Discriminator", "Generator and Distractor", "Transformer and Discriminator" ],
        "correct_answer": "Generator and Discriminator"
      },
      {
        "question": "The key moment in GAN is competition between Generator and Discriminator.<br>Generator generates i.e. text out of text and Discriminator classifies it as either real or fake",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "Discriminator and Generator are two neural networks in GAN, that learn from each other",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "CNN is ...",
        "options": ["news service like BBC", "convolutional neural network"],
        "correct_answer": "convolutional neural network"
      },
      {
        "question": "Convolutional Neural Network does its best in ...",
        "options": ["images classification / objects detection / image generation", "speech recognition", "articles spinning"],
        "correct_answer": "images classification / objects detection / image generation"
      },
      {
        "question": "Convolutional NN has convolutional layers, designed for processing grid-like data, such as images",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "Convolutional Layer is Hidden layer",
        "options": ["Yes, hidden layers are between input and output layers and Convolutional Layer is a type of Hidden layer", "No, Convolutional Layer is specific to CNN, all layers are Convolutional in there"],
        "correct_answer": "Yes, hidden layers are between input and output layers and Convolutional Layer is a type of Hidden layer"
      },
      {
        "question": "When you need to work with sequential data, such as time series, natural language, speech, your choice is ...",
        "options": ["CNN", "GAN", "RNN"],
        "correct_answer": "RNN"
      },
      {
        "question": "RNN stands for ...",
        "options": ["Recognitive Neural Network", "Recurrent Neural Network"],
        "correct_answer": "Recurrent Neural Network"
      },
      {
        "question": "When processing sequential data, RNNs suffer from the vanishing gradient problem and the exploding gradient problem",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "Wnen running the Python code below, result of <strong>default</strong> eval() is...<br>result = eval('2 + 3')<br>print(result)",
        "options": ["2+3", "5"],
        "correct_answer": "5"
      },
      {
        "question": "In NLP term 'corpus' means...",
        "options": ["stemming & lemmatization of tokenized text", "a large dataset of text samples that are used for training, validating, or testing NLP models"],
        "correct_answer": "a large dataset of text samples that are used for training, validating, or testing NLP models"
      },
      {
        "question": "<strong>Gradient</strong> in ML is ...",
        "options": ["Logarithm from function with more than one input, mathematically speaking it is a slope", "Derivative from function with more than one input, mathematically speaking it is a slope"],
        "correct_answer": "Derivative from function with more than one input, mathematically speaking it is a slope"
      },
      {
        "question": "eval() in PyTorch and built in eval() serve different purposes",
        "options": ["Yes, these functions are different", "No, these functions are the same"],
        "correct_answer": "Yes, these functions are different"
      },
      {
        "question": "eval() in PyTorch sets a model into evaluation mode, in evaluation mode, the model behaves differently than in training mode",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "PyTorch objects (i.e. saved pytorch model) usually have extension...",
        "options": ["pth", "ipynb"],
        "correct_answer": "pth"
      },
      {
        "question": "What is <strong>LangChain</strong>?",
        "options": ["Large Language Model", "Open-source Framework that uses as input a Large Language Model"],
        "correct_answer": "Open-source Framework that uses as input a Large Language Model"
      },
      {
        "question": "In LangChain this<br><strong>User Input -> Intent Recognition -> Data Retrieval -> Language Model -> Output Formatter</strong><br>is example of",
        "options": ["chain in LangChain", "link in LangChain"],
        "correct_answer": "chain in LangChain"
      },
      {
        "question": "In the scenaraio<br><strong>User Input -> Intent Recognition -> Data Retrieval -> Language Model -> Output Formatter</strong><br>LLM component in LangChain could be responsible for ...",
        "options": ["gathering relevant info on the topic", "formulating an appropriate response back", "recognition of user's intention"],
        "correct_answer": "formulating an appropriate response back"
      },
      {
        "question": "pip install langchain",
        "options": ["installs LangChain library", "does not do anything, because this library is built-in"],
        "correct_answer": "installs LangChain library"
      },
      {
        "question": "LangChain library is written in",
        "options": ["Python + Java", "Python"],
        "correct_answer": "Python + Java"
      },
      {
        "question": "Explain this construction in Python<br><strong>*_, = 'Python'</strong>",
        "options": ["*_, is illegal name of a variable in Python, so we will get runtime error", "'*' means 'unpacking', '_' is a legal name of variable, ',' is layout formatting, so _ = ['P', 'y', 't', 'h', 'o', 'n']"],
        "correct_answer": "'*' means 'unpacking', '_' is a legal name of variable, ',' is layout formatting, so _ = ['P', 'y', 't', 'h', 'o', 'n']"
      },
      {
        "question": "Each Neuron in NN is a math. operation",
        "options": ["Yes, it is a reasonable simplification, each neuron (or node) typically performs a mathematical operation on the input it receives", "No, because Neurons in hidden layers do not perform any math. operations"],
        "correct_answer": "Yes, it is a reasonable simplification, each neuron (or node) typically performs a mathematical operation on the input it receives"
      },
      {
        "question": "Output of each Neuron in NN is ...",
        "options": ["Input for next Neuron in the line", "All the Neurons are independent"],
        "correct_answer": "Input for next Neuron in the line"
      },
      {
        "question": "Process of scaling and centering input data before feeding it into the neural network is called",
        "options": ["Regularization", "Normalization", "Optimization"],
        "correct_answer": "Normalization"
      },
      {
        "question": "Normalization typically happens in Input Layer of NN, so hidden layers work with normalized input",
        "options": ["No", "Yes, but it depends, Normalization is a significant topic"],
        "correct_answer": "Yes, but it depends, Normalization is a significant topic"
      },
      {
        "question": "Z-score ..., Min / Max ...",
        "options": ["Normalization", "Loss Function", "Distribution"],
        "correct_answer": "Normalization"
      },
      {
        "question": "BatchNorm can be applied to all layers of NN",
        "options": ["Yes", "Yes, except Output Layer"],
        "correct_answer": "Yes"
      },
      {
        "question": "Main idea of BatchNorm ...",
        "options": ["normalizes the inputs of each layer by subtracting the mean and dividing by the standard deviation of the batch", "normalizes the inputs of input layer by subtracting the mean and dividing by the standard deviation of the batch"],
        "correct_answer": "normalizes the inputs of each layer by subtracting the mean and dividing by the standard deviation of the batch"
      },
      {
        "question": "BatchNorm is applied",
        "options": ["feature/neuron-wise", "to Neurons' weights only"],
        "correct_answer": "feature/neuron-wise"
      },
      {
        "question": "The number of neurons in the input layer should match the number of features in your dataset",
        "options": ["No, a Neuron can be associated with a few features", "Exactly"],
        "correct_answer": "Exactly"
      },
      {
        "question": "Is it correct statement:<br>In the input layer of a neural network, each feature in your dataset is considered a dimension.<br>For example, if you have a dataset with three features (e.g., height, weight, age), the input layer would have three neurons, and each neuron corresponds to one dimension",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "<strong>Embedding</strong> in NN is ...",
        "options": ["there is no such term in NN", "continuous vector"],
        "correct_answer": "continuous vector"
      }
     
   
   
   ]
   