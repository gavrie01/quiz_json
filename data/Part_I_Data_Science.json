[
    {
        "question": "Which Activation Function in Machine Learning has a range between 0 and positive infinity?",
        "options": ["ReLu", "Sigmoid", "Tanh"],
        "correct_answer": "ReLu"
    },
    {
        "question": "What is tensor in tensor algebra?",
        "options": ["An algebraic object that describes a multilinear relationship between sets of algebraic objects related to a vector space", "An algebraic object that describes a unilinear relationship between sets of algebraic objects related to a vector space"],
        "correct_answer": "An algebraic object that describes a multilinear relationship between sets of algebraic objects related to a vector space"
    },
    {
      "question": "Technically Tensors are multi-dimensional arrays with a uniform type (dtype):",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "When it comes to training time in TensorFlow and PyTorch libraries:",
      "options": ["TensorFlow has higher training time", "PyTorch has higher training time", "Times are the same"],
      "correct_answer": "TensorFlow has higher training time"
    },
    {
      "question": "When it comes to flexibility of TensorFlow and PyTorch libraries:",
      "options": ["TensorFlow is more flexible", "PyTorch is more flexible"],
      "correct_answer": "PyTorch is more flexible"
    },
    {
      "question": "One of the most promising and widely adopted languages for data science, machine learning, and statistical computing:",
      "options": ["Python", "C++", "Basic", "PHP"],
      "correct_answer": "Python"
    },
    {
      "question": "... is the most widely used language in the Jupyter ecosystem:",
      "options": ["R", "Julia", "Python"],
      "correct_answer": "Python"
    },
    {
      "question": "PyTorch is an open source machine learning and deep learning framework:",
      "options": ["True", "False", "I have never heard of it, so the package does not exist"],
      "correct_answer": "True"
    },
    {
      "question": "Scalar, Vector, Matrix are different types of tensor",
      "options": ["True", "False"],
      "correct_answer": "True"
    },
    {
      "question": "In pytorch scalar tensor is created like i.e.:",
      "options": ["scalar = torch.tensor(7,7)", "scalar = torch.tensor(7)", "scalar = torch.tensor()"],
      "correct_answer": "scalar = torch.tensor(7)"
    },
    {
      "question": "A scalar refers to a:",
      "options": ["single numeric value", "can be a string"],
      "correct_answer": "single numeric value"
    },
    {
      "question": "Put in logical order:",
      "options": ["scalar/matrix/vector", "matrix/scalar/vector", "scalar/vector/matrix"],
      "correct_answer": "scalar/vector/matrix"
    },
    {
      "question": "Tensors, in general, are the fundamental building blocks in PyTorch:",
      "options": ["definitely yes", "of course not"],
      "correct_answer": "definitely yes"
    },
    {
      "question": "Tensors can work with integers only:",
      "options": ["No, tensors in PyTorch can work with various numeric data types", "Yes, they work only with integers"],
      "correct_answer": "No, tensors in PyTorch can work with various numeric data types"
    },
    {
      "question": "Random Tensors are important, because:",
      "options": ["because they are not important", "the way many neural networks learn is they start with tensors full of random numbers and adjust random numbers to better represent data and so on"],
      "correct_answer": "the way many neural networks learn is they start with tensors full of random numbers and adjust random numbers to better represent data and so on"
    },
    {
      "question": "The following code in Python:<br>x =2<br>y = (x := x * 2) + x<br>print(y)<br>is example of:",
      "options": ["assignment within expression, called walrus operator", "runtime error, it does not work"],
      "correct_answer": "assignment within expression, called walrus operator"
    },
    {
      "question": "What of the following methods does not prevent model from overfitting",
      "options": ["dropout", "pooling", "early stopping","data augmentation"],
      "correct_answer": "pooling"
    },
    {
      "question": "Regularization refers to techniques that are used to calibrate machine learning models in order to minimize the adjusted loss function and prevent:",
      "options": ["overfitting and underfitting", "only overfitting", "only underfitting"],
      "correct_answer": "overfitting and underfitting"
    },
    {
      "question": "Lasso and Ridge are Regularization techniques:",
      "options": ["Yes", "No", "only Lasso"],
      "correct_answer": "Yes"
    },
    {
      "question": "Linear Regression can be used for Classification:",
      "options": ["Yes, it can be used as is", "No, Logistic Regression is the right choice"],
      "correct_answer": "No, Logistic Regression is the right choice"
    },
    {
      "question": "SMOTE - Synthetic Minority Over-sampling Technique - is",
      "options": ["specialized algorithm designed to handle imbalanced data", "probably there is SMOTE, but it is not related to ML"],
      "correct_answer": "specialized algorithm designed to handle imbalanced data"
    },
    {
      "question": "In the context of linear regression, a <strong>scalar</strong> typically refers to a single numerical value, which is a continuous variable:",
      "options": ["True", "False"],
      "correct_answer": "True"
    },
    {
      "question": "In Natural Language Processing variable <strong>V</strong> means",
      "options": ["Vocabulary", "Volume"],
      "correct_answer": "Vocabulary"
    },
    {
      "question": "Logistic Regression is a binary classification, which predicts [0,1] outcomes",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "Logistic Regression uses sigmoid function (logistic function)",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "In linear function y=mx+b, <strong>m</strong> and <strong>b</strong> are scalars:",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "In Python <strong>dtype</strong> is a function that belongs to NumPy library:",
      "options": ["Yes, dtype is a function", "No, dtype is not a function, it is attribute of array"],
      "correct_answer": "No, dtype is not a function, it is attribute of array"
    },
    {
      "question": "Difference between <strong>encoding</strong> and <strong>imputation</strong> respectively:",
      "options": ["transforms data from categorical to numeric format / predicts missing values", "predicts missing values / transforms data from categorical to numeric format"],
      "correct_answer": "transforms data from categorical to numeric format / predicts missing values"
    },
    {
      "question": "Highest Precision in computing in PyTorch is achieved with:",
      "options": ["64-bit floating point dtype, but torch.float32 may be sufficient for majority of tasks ", "32-bit floating point dtype", "16-bit floating point dtype"],
      "correct_answer": "64-bit floating point dtype, but torch.float32 maybe sufficient"
    },
    {
      "question": "Neural Netwrok learns via tensors manipulation: multiply, divide, substract, add",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "The following manipulation on tensor<br>tensor = torch.tensor([1,2,3])<br>tensor + 10<br> returns",
      "options": ["Error, summation does not work element-wise", "tensor([11,12,13])"],
      "correct_answer": "tensor([11,12,13])"
    },
    {
      "question": "The following manipulation on tensor<br>tensor = torch.tensor([1,2,3])<br>tensor * 10<br>tensor<br> returns",
      "options": ["tensor([1,2,3])", "tensor([10,20,30])"],
      "correct_answer": "tensor([1,2,3])"
    },
    {
      "question": "Does tensor aggregation exist?",
      "options": ["yes, MAX, MIN, MEAN and SUM", "no, it is impossible"],
      "correct_answer": "yes, MAX, MIN, MEAN and SUM"
    },
    {
      "question": "A conventional system refers to a system that is widely accepted and commonly used within a particular field or industry. ",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "An adversarial testing is",
      "options": ["a method for systematically evaluating an ML model with the intent of learning how it behaves when provided with malicious or inadvertently harmful input", "A/B testing"],
      "correct_answer": "a method for systematically evaluating an ML model with the intent of learning how it behaves when provided with malicious or inadvertently harmful input"
    }
]  