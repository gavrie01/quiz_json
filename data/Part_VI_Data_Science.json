[
    {
       "question": "'Valid', 'Same', 'Full' are types of ... in a Neural Network",
       "options": ["pooling", "padding"],
       "correct_answer": "padding"
     },
     {
      "question": "Padding in Neural Network is widely used in .... processing",
      "options": ["image", "natural language"],
      "correct_answer": "image"
    },
    {
      "question": "<strong>Convolution Operation</strong> in CNN involves sliding the filters over ...",
      "options": ["the output data, element-wise multiplying the filter values with the overlapping input values, and summing the results", "the input data, element-wise multiplying the filter values with the overlapping input values, and summing the results"],
      "correct_answer": "the input data, element-wise multiplying the filter values with the overlapping input values, and summing the results"
    },
    {
      "question": "RNN / Transformers: Padding is used in Tokenization in NLP for which purpose?",
      "options": ["for randomization of sequences", "it adds special tokens (often representing padding) to ensure that all sequences in a batch have the same length"],
      "correct_answer": "it adds special tokens (often representing padding) to ensure that all sequences in a batch have the same length"
    },
    {
      "question": "'Valid' type of Padding means",
      "options": ["no padding is added, and the filter or pooling window moves across the input without extra elements", "padding is added, and the filter or pooling window moves across the input with one extra element"],
      "correct_answer": "no padding is added, and the filter or pooling window moves across the input without extra elements"
    },
    {
      "question": "<strong>Output size = (Input size + 2 * padding - filter size) / stride + 1</strong><br> illustrates  what type of <strong>Padding</strong> in CNN?",
      "options": ["Full", "Valid", "Same"],
      "correct_answer": "Same"
    },
    {
      "question": "In 2023, in NN context, how many spatial dimensions are used in NN?",
      "options": ["1D, 2D, 3D", "1D, 2D, 3D, 4D", "1D, 2D, 3D, 4D, 5D"],
      "correct_answer": "1D, 2D, 3D"
    },
    {
      "question": "What is the purpose of device-agnostic code?",
      "options": ["the purpose is to create a software that stably works on the same device and does not depend on OS of device", "the purpose is to create software that provides a seamless and consistent experience to users regardless of the specific device they are using"],
      "correct_answer": "the purpose is to create software that provides a seamless and consistent experience to users regardless of the specific device they are using"
    },
    {
      "question": "Explain this line of code<br>y_pred = torch.round(torch.sigmoid(y_logits))<br>",
      "options": ["activation function (sigmoid in this case) is applied to y_logits (a tensor), the output is rounded to the nearest integer, since sigmoid function produces values 0 or 1", "activation function (sigmoid in this case) is applied to y_logits (a tensor), the output is rounded to the nearest float, since sigmoid function produces values between 0 and 1"],
      "correct_answer": "activation function (sigmoid in this case) is applied to y_logits (a tensor), the output is rounded to the nearest integer, since sigmoid function produces values 0 or 1"
    },
    {
      "question": "A = torch.arange(-10, 10, 1) and B = torch.arange(-10, 10, 0.1) creates tensors of which types?",
      "options": ["A is int64, B is float32, because of steps = 1 and 0.1 respectively", "these are not tensors, these are one dimensional arrays"],
      "correct_answer": "A is int64, B is float32, because of steps = 1 and 0.1 respectively"
    },
    {
      "question": "A = torch.arange(-10, 10, 1, dtype = torch.float32), in this code float32 tensor type os forcedly set",
      "options": ["Yes", "No"],
      "correct_answer": "Yes"
    },
    {
      "question": "What does this construction mean (generally in Python)?<br>def relu(x: torch.Tensor) -> torch.Tensor:...<br>",
      "options": ["this function accepts x of torch.Tensor type and returns torch.Tensor type as output", "this construction does not work, because the function already knows the output type, it is torch.Tensor"],
      "correct_answer": "this function accepts x of torch.Tensor type and returns torch.tensor type as well"
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    },
    {
      "question": "",
      "options": ["", ""],
      "correct_answer": ""
    }
     
     
   
   ]
   