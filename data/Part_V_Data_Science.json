[
    {
       "question": "Example of <strong>Continuous Vector</strong> in Math is a",
       "options": ["3-dimensional continuous vector (x,y,z), where x, y, and z can be any real number from a given range", "there are only linear vectors on math"],
       "correct_answer": "3-dimensional continuous vector (x,y,z), where x, y, and z can be any real number from a given range"
     },
     {
        "question": "let us imagine there is a survey, 100 peeps participated, 99 respondents are in range 25-30 y.o.and 1 respondent in 90+ range.<br> This one 90+ person is an... ",
        "options": ["Right Skewer", "Outlier, since this data point spoils the whole distribution"],
        "correct_answer": "Outlier, since this data point spoils the whole distribution"
      },
      {
        "question": "What is vanilla Python?",
        "options": ["Seriously?", "Python is called vanilla or CPython to distinguish it from other Python implementations, such as Jython, PyPy, etc"],
        "correct_answer": "Python is called 'vanilla' to distinguish it from other Python implementations, such as Jython (Python on the Java Virtual Machine), etc"
      },
      {
        "question": "The primary differences between different Python implementations lie in",
        "options": ["underlying environments and implementation details", "in syntax of Python itself"],
        "correct_answer": "underlying environments and implementation details"
      },
      {
        "question": "Among all the 'dialects' of Python there is one that uses JIT (Just-in-Time) compiler and works a bit faster",
        "options": ["Iron Python", "PyPy", "CPhyton"],
        "correct_answer": "PyPy"
      },
      {
        "question": "What is tabular data?",
        "options": ["data organized in two dimensional array, typically with rows and columns", "taboo data, needs to be de-anonymized before scientific processes"],
        "correct_answer": "data organized in two dimensional array, typically with rows and columns"
      },
      {
        "question": "In Python sklearn library, there is a list of ready to go data sets, how can i check its content",
        "options": ["dataset_list = datasets.__all__", "dataset_list = load_all(__data_sets__)"],
        "correct_answer": "dataset_list = datasets.__all__"
      },
      {
        "question": "Dataframe and Dataset mean same thing in Data Science",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "In Data Science, Datasets are typically small in size, easy to understand, and used to demonstrate or test algorithms, models, or code snippets are called...",
        "options": ["Educational Datasets", "Toy Datasets", "OOB Datasets"],
        "correct_answer": "Toy Datasets"
      },
      {
        "question": "In Data Science <strong>fit</strong> means:",
        "options": ["applying an algorithm to learn the patterns and relationships within the training data so that the model can make predictions on new, unseen data", "scaling"],
        "correct_answer": "applying an algorithm to learn the patterns and relationships within the training data so that the model can make predictions on new, unseen data"
      },
      {
        "question": "In PyTorch all classes being created by ML engineer are inherited from:",
        "options": ["nn.Parameters, it is the base class for all NN modules", "nn.Modules, it is the base class for all NN modules"],
        "correct_answer": "nn.Modules, it is the base class for all NN modules"
      },
      {
        "question": "In PyTorch, how does layers 'communicate' together?",
        "options": ["in_features / out_features parameters of a model set by ML engineer (layers_1.out_features == layer_2.in_features)", "this data is automatically sent from layer to layer, ML engineer has no influence"],
        "correct_answer": "in_features / out_features parameters of a model set by ML engineer (layers_1.out_features == layer_2.in_features)"
      },
      {
        "question": "In the context of binary classification, where the goal is to classify instances into one of two classes (e.g., positive or negative), cross-entropy is often used as ...",
        "options": ["a Loss function", "a measure of Perplexity"],
        "correct_answer": "a Loss function"
      },
      {
        "question": "This is<br>−(y⋅log(p)+(1−y)⋅log(1−p)), where y is true label (0,1) and p is predicted probability is ...",
        "options": ["Shannon Entropy", "Binary Cross-Entropy", "Gini Impurity", "Entropy in Decision Trees"],
        "correct_answer": "Binary Cross-Entropy"
      },
      {
        "question": "The term <strong>sigmoid function</strong> is used to refer to a class of functions with ...",
        "options": ["Line with negative slope", "S-shaped curves", "Convex function"],
        "correct_answer": "S-shaped curves"
      },
      {
        "question": "Inverse of ... function is <strong>sigmoid</strong> function",
        "options": ["logit", "swish"],
        "correct_answer": "logit"
      },
      {
        "question": "e^ax is an example of ...",
        "options": ["linear function", "convex function"],
        "correct_answer": "convex function"
      },
      {
        "question": "Softmax is a mathematical function that converts a vector of real numbers into a probability distribution",
        "options": ["Yes", "No"],
        "correct_answer": "Yes"
      },
      {
        "question": "Softmax function is often used in the ... layer of a neural network to produce probabilities for multiple classes",
        "options": ["input", "output", "hidden"],
        "correct_answer": "output"
      },
      {
        "question": "Output of Softmax function is:",
        "options": ["a vector where each element is a non-negative real number between 0 and 1, and the sum of all elements is 1", "a vector where each element is a negative number between 0 and 1"],
        "correct_answer": "a vector where each element is a non-negative real number between 0 and 1, and the sum of all elements is 1"
      },
      {
        "question": "The <strong>softmax</strong> function is commonly used for ... in the context of deep learning",
        "options": ["weights randomizing", "normalization"],
        "correct_answer": "normalization"
      },
      {
        "question": "In machine learning, especially in the context of binary classification, the term <strong>logit</strong> is often used in the ... ... model",
        "options": ["random forest", "logistic regression", "linear regression"],
        "correct_answer": "logistic regression"
      },
      {
        "question": "What does this function do: torch.nn.BCEWithLogitsLoss()",
        "options": ["this function combines binary cross-entropy with logit loss function and built-in sigmoid activation function, this is a loss function commonly used for binary classification problems", "this function combines binary cross-entropy with logit loss function, this is a loss function commonly used linear regression problems"],
        "correct_answer": "this function combines binary cross-entropy with logit loss function and built-in sigmoid activation function, this is a loss function commonly used for binary classification problems"
      },
      {
        "question": "... = True Positive / (True Positive + True Negative) * 100",
        "options": ["Accuracy", "Recall", "Precision"],
        "correct_answer": "Accuracy"
      },
      {
        "question": "torch.eq(y_true, y_pred) returns ...",
        "options": ["it is boolean", "maximum of two arrays"],
        "correct_answer": "it is boolean"
      },
      {
        "question": "In DL, raw outputs of a model without being passed to activation function to another of a model is called ...",
        "options": ["there is no raw input, it is always processed", "logits"],
        "correct_answer": "logits"
      },
      {
        "question": "What is the difference between<br><strong>(1) for epoch in range(epochs)</strong><br>and<br><strong>(2)for epoch in epochs</strong>",
        "options": ["(1)iterates over a range of numerical values, (2)iterates over the elements of an iterable object (e.g., a list) and the output is the same", "(1)iterates over the elements of an iterable object (e.g., a list), (2)iterates over a range of numerical values and the output is the same"],
        "correct_answer": "(1)iterates over a range of numerical values, (2)iterates over the elements of an iterable object (e.g., a list) and the output is the same"
      },
      {
        "question": " In PyTorchб optimizer.zero_grad() is responsible for",
        "options": ["before performing the backward pass on a new batch, it zeros out the gradients of all the parameters that the optimizer is optimizing", "after performing the backward pass on a new batch, it zeros out the gradients of all the parameters that the optimizer is optimizing"],
        "correct_answer": "before performing the backward pass on a new batch, it zeros out the gradients of all the parameters that the optimizer is optimizing"
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      },
      {
        "question": "",
        "options": ["", ""],
        "correct_answer": ""
      }
     
   
   ]
   