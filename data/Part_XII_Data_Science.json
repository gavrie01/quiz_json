[
    {
       "question": "What does Convolution Layer in CNN do?",
       "options": ["extracts/learn the most important features from target texts", "extracts/learn the most important features from target images", "extracts/learn the most important features from target audio recordings"],
       "correct_answer": "extracts/learn the most important features from target images"
     },
    {
      "question": "Pooling Layer ... in CNN",
      "options": ["reduces dimensionality of learned image features", "pools calculated logits to the next layer", "discriminates features with low probabilities and pools the rest to the next layer"],
      "correct_answer": "reduces dimensionality of learned image features"
     },
     {
      "question": "... is base domain library for PyTorch computer vision",
      "options": ["torchvision", "torchlooking", "torchtracking"],
      "correct_answer": "torchvision"
    },
   {
     "question": "What does ToTensor() do in torchvision.transforms",
     "options": ["converts PIL image to tensor", "converts PIL image or ndarray to tensor"],
     "correct_answer": "converts PIL image or ndarray to tensor"
    }, 
    {
      "question": "'PIL' is ...",
      "options": ["Python Imaging Library", "short form of 'pillow'", "excuse me?"],
      "correct_answer": "Python Imaging Library"
    },
   {
     "question": "PIL enables Python to deal with images",
     "options": ["yes", "no"],
     "correct_answer": "yes"
    }, 
    {
      "question": "MNIST is a ...",
      "options": ["large DB of handwritten digits, is commonly used for training in DL systems", "Python library used in CNN"],
      "correct_answer": "large DB of handwritten digits, is commonly used for training in DL systems"
    },
   {
     "question": "In PyTorch ... are not considered to have a 'shape'",
     "options": ["tensors", "arrays", "integers"],
     "correct_answer": "integers"
    }, 
    {
      "question": "In Pytorch, the ... provides the ability to divide a dataset into batches and iterate over them seamlessly",
      "options": ["DataBalancer", "DataLoader", "DataMapper"],
      "correct_answer": "DataLoader"
    },
   {
     "question": "in PyTorch, nn.Flatten() does what?",
     "options": ["applies Laplace Smoothing to each layer of i.e. CNN", "reshapes the data being passed between layers in i.e. CNN, it works with dimensions"],
     "correct_answer": "reshapes the data being passed between layers in i.e. CNN, it works with dimensions"
    }, 
    {
      "question": "nn.Flatten():<br>Shape before flattening: torch.Size([1, 28, 28])<br>Shape after flattening: torch.Size([.....])<br>What is after flattening shape?",
      "options": ["[1, 56]", "[1, 784]", "[1, 28, 28], no need to apply flattening in this case"],
      "correct_answer": "[1, 784]"
    },
   {
     "question": "nn.Flatten() is a layer on NN?",
     "options": ["yes, it is a built-in layer", "it is rather a data preprocessing operation"],
     "correct_answer": "it is rather a data preprocessing operation"
    }, 
    {
      "question": "Flatten(), in Pytorch, is applied to ... in a context of NN",
      "options": ["tensor", "scalar", "string", "image"],
      "correct_answer": "tensor"
    },
   {
     "question": "Rank 0 tensor is ...",
     "options": ["scalar", "matrix"],
     "correct_answer": "scalar"
    }, 
    {
      "question": "Rank 4 tensor is ...",
      "options": ["4D tensor", "scalar", "3D tensor"],
      "correct_answer": "4D tensor"
    },
   {
     "question": "Rank 2 ten—ãor is ...",
     "options": ["2D / matrix", "matrix"],
     "correct_answer": "2D / matrix"
    }, 
    {
      "question": "The ... function looks at the predictions and the true answers and calculates a number that tells us how far off our predictions are from the truth",
      "options": ["activation", "loss"],
      "correct_answer": "loss"
    },
   {
     "question": "nn.CrossEntropyLoss() suits better ... case",
     "options": ["linear regression", "multi classification"],
     "correct_answer": "multi classification"
    }, 
    {
      "question": " ... is a Python library that provides a fast, extensible progress bar for loops and other iterable processes",
      "options": ["timeit", "tqdm", "sleep&wakeup"],
      "correct_answer": "tqdm"
    },
   {
     "question": "in Python, class D(B, C): means ...",
     "options": ["class D inherits from classes B and C", "class D aggregates classes B and C"],
     "correct_answer": "class D inherits from classes B and C"
    }, 
    {
      "question": "In Python, super().__init__() is responsible for ...",
      "options": ["ensures that each class in the hierarchy contributes to the initialization process without redundantly reinitializing shared components", "i do not know"],
      "correct_answer": "ensures that each class in the hierarchy contributes to the initialization process without redundantly reinitializing shared components"
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    }, 
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    }, 
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    },  
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    }, 
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    }, 
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    }, 
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    },
   {
     "question": "",
     "options": ["", ""],
     "correct_answer": ""
    }, 
    {
      "question": "",
      "options": ["", "", ""],
      "correct_answer": ""
    }
        
   ]
   