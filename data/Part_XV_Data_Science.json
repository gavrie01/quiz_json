[
    {
       "question": "in Python, ... is a special type of function that allows suspending its execution, returning control back to the calling code, and then resuming execution from where it was paused",
       "options": ["non-routine", "coroutine"],
       "correct_answer": "coroutine"
     },
     {
      "question": "In Python async function is declared as ...",
      "options": ["'async def my_coroutine():'", "'def my_coroutine(async):'"],
      "correct_answer": "'async def my_coroutine():'"
    },
    {
      "question": " ... is a mechanism used in some implementations of the Python programming language to synchronize access to Python objects, preventing multiple native threads from executing Python bytecodes at once",
      "options": ["The Global Interpreter Lock", "Threading"],
      "correct_answer": "The Global Interpreter Lock"
    },
    {
      "question": "GIL is a built-in mechanism in the CPython interpreter",
      "options": ["yes", "no, developer needs to write the code"],
      "correct_answer": "yes"
    },
    {
      "question": "Auto regression models use ...",
      "options": ["logistic regression", "time series"],
      "correct_answer": "time series"
    },
    {
      "question": "In Python, print(True + False) returns ...",
      "options": ["error", "1", "0"],
      "correct_answer": "1"
    },
    {
      "question": "Examole of generator in Python",
      "options": ["exit", "yield"],
      "correct_answer": "yield"
    },
    {
      "question": "In Python, when generator function is called, it returns an ... called a generator",
      "options": ["object", "iterator"],
      "correct_answer": "iterator"
    },
    {
      "question": "In Python, comments to fucntions are introduced as ...",
      "options": ["comment", "docstring"],
      "correct_answer": "docstring"
    },
    {
      "question": "What is pythonic way to name a variable?",
      "options": ["ptc", "participants_total_count", "a-"],
      "correct_answer": "participants_total_count"
    },
    {
      "question": "Calculation 'if 100 in {1, 2, 3, ...1000}' is faster rather than 'if 100 in [1, 2, 3, ...1000]'",
      "options": ["yes, sets use hash function", "no, performance is the same"],
      "correct_answer": "yes, sets use hash function"
    },
    {
      "question": "What is more expensive: append() or insert()?",
      "options": ["insert(), it adds to beginning of the list, so we need to shift the whole sequence to +1", "append(), so we need to find the last element of the list"],
      "correct_answer": "insert(), it adds to beginning of the list, so we need to shift the whole sequence to +1"
    },
    {
      "question": "In SVM, the algorithm relies on a set of data points called ... to create the best separation between different classes.",
      "options": ["support vectors", "number of neural network layers"],
      "correct_answer": "support vectors"
    },
    {
      "question": "is 1 a prime number?",
      "options": ["yes", "no"],
      "correct_answer": "no"
    },
    {
      "question": "Is 1 a composite number?",
      "options": ["yes", "no"],
      "correct_answer": "no"
    },
    {
      "question": "All the numbers in 'Number Theory' are 'divided' into prime and composite numbers",
      "options": ["yes", "no"],
      "correct_answer": "yes"
    },
    {
      "question": "111 can be divided by 3, how can it be proved / disapproved without calculation?",
      "options": ["111 is a simple number, it can be divided by 1 and itself only", "111 = '1 + 1 + 1' = 3, 3 can be divided by 3"],
      "correct_answer": "111 = '1 + 1 + 1' = 3, 3 can be divided by 3"
    },
    {
      "question": "If this formula 2^n - 1, where n is a simple number, calculates another simple number, this simple number is .. ",
      "options": ["Mersenne prime number", "Gauss prime number"],
      "correct_answer": "Mersenne prime number"
    },
    {
      "question": "New prime numbers are regularly discovered as ... and technologies 'make a revolution each day'",
      "options": ["it is wrong assumption, the largest prime number is already discovered and it is a constant in math", "computational methods"],
      "correct_answer": "computational methods"
    },
    {
      "question": "Long, long time ago mathematical equations were oriented towards integer numbers because other types of numbers ....",
      "options": ["had been discovered, scientist considered them to be too complex to use", "had not yet been discovered"],
      "correct_answer": "had not yet been discovered"
    },
    {
      "question": "In  context of API, what request I can use with i.e. 'https://shopping/drinks/light_drinks/904' endpoint",
      "options": ["POST", "PUT"],
      "correct_answer": "PUT"
    },
    {
      "question": "In context of API, ... is used for update",
      "options": ["PUT", "UPDATE"],
      "correct_answer": "PUT"
    },
    {
      "question": "The ... method is used to apply a partial update to a resource",
      "options": ["PUT", "PATCH"],
      "correct_answer": "PATCH"
    },
    {
      "question": "... is a human-readable data serialization format",
      "options": ["Form-Data", "YAML"],
      "correct_answer": "YAML"
    },
    {
      "question": "With ..., you can easily inspect the details of your PyTorch model, such as the input and output shapes of each layer, the total number of parameters, and the memory footprint",
      "options": ["Torchvisualization", "Torchinfo"],
      "correct_answer": "Torchinfo"
    },
    {
      "question": "In algebra, can I divide 0 by 0?<br>Choose the most relevant option",
      "options": ["yes, division itself is possible, but there is no single solution, therefore it is division fact w/o solution", "no, it is impossible to divide by 0 whatever happens", "yes, it is possible, there are multiple solutions, any number multiplied ty 0 returns 0", "no, if it is impossible in physics, it is impossible in math"],
      "correct_answer": "yes, division itself is possible, but there is no single solution, therefore it is division fact w/o solution"
    },
    {
      "question": "def f(a, *t, **d):<br>print(a, t, d)<br>f(1, 2, 3, n =4) returns ... (let us imagine indentation is correct)",
      "options": ["[1, (2, 3), {'n': 4}]", "1 (2, 3) {'n': 4}", "1 (2, 3) {4, 4, 4, 4}"],
      "correct_answer": "1 (2, 3) {'n': 4}"
    },
    {
      "question": "We ... use unknown word model for naive Bayes",
      "options": ["do", "don't"],
      "correct_answer": "don't"
    },
    {
      "question": "Gaussian, Bernoulli, Categorical, Binary, Standard, it is all about ...",
      "options": ["Laplace Smoothing mechanisms", "Naive Bayes", "text tokenization technics"],
      "correct_answer": "Naive Bayes"
    },
    {
      "question": "In NLP context, this is example of dealing with negation in sentiment analysis tasks: 'didn't like the movie, but I'",
      "options": ["<NOT>like the movie</NOT>, but I", "didn't NOT_like NOT_this NOT_movie, but i"],
      "correct_answer": "didn't NOT_like NOT_this NOT_movie, but i"
    },
    {
      "question": "In NLP, is there any difference between NOT_bored and NOT_like",
      "options": ["yes, in sentiment analysis context", "no, NOT_ is not used like that, these words should be added into stop lists"],
      "correct_answer": "yes, in sentiment analysis context"
    },
    {
      "question": "NLP context, a ... a simple model used to predict the outcome of data. It serves as a starting point for analysis.",
      "options": ["baseline model", "initial model", "zero model"],
      "correct_answer": "baseline model"
    },
    {
      "question": "Naive Bayes Classifiers can be sued for sentiment analysis and spam detection",
      "options": ["only for sentiment analysis", "only for spam detection", "for the given tasks only", "for the given tasks + number of other tasks, like language identification fraud detection"],
      "correct_answer": "for the given tasks + number of other tasks, like language identification fraud detection"
    },
    {
      "question": "In NLP, ... refers to the 'likelihood' of a particular outcome or event occurring",
      "options": ["there is no such official term 'likelihood'", "probability"],
      "correct_answer": "probability"
    },
    {
      "question": "Only likelihood is used in Naive Bayes to make a classification decision",
      "options": ["yes, it is enough", "no, full Naive Bayes model is used"],
      "correct_answer": "no, full Naive Bayes model is used"
    } 
     
   ]
   